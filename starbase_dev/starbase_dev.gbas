// --------------------------------- //
// Project: starbase_dev
// Start: Monday, December 08, 2014
// IDE Version: 12.312


// SETCURRENTDIR("Media") // go to media files
TYPE optionsType
	debugmodus
	developermodus

	loglevel_info
	loglevel_warning
	loglevel_critical
	loglevel_error
ENDTYPE

GLOBAL options AS optionsType

main()

FUNCTION main:
	
	options.developermodus = TRUE
	init()
	writeLog("bla", 0)

	WHILE TRUE

		SHOWSCREEN
	WEND
ENDFUNCTION

FUNCTION init:

	AUTOPAUSE FALSE
	SYSTEMPOINTER TRUE
	checkCommandline()
	checkLogfile()
	SETSCREEN checkOptions(0), checkOptions(1), checkOptions(2)

ENDFUNCTION

FUNCTION checkCommandline:
LOCAL debuginfo$, count, spl$[]
	debuginfo$ = GETCOMMANDLINE$()

	count = SPLITSTR(debuginfo$, spl$[], " -")

	IF count = 2
		IF spl$[1] = "debug" THEN options.debugmodus = TRUE
		IF spl$[1] = "developermodus:123" THEN options.developermodus = TRUE
	ENDIF

ENDFUNCTION

FUNCTION checkLogfile:
LOCAL ok
	
	IF options.debugmodus = TRUE OR options.developermodus = TRUE
		ok = DOESDIREXIST("log")
		IF ok = FALSE THEN CREATEDIR("log")
		
		ok = DOESFILEEXIST("log/log.ini")
		IF ok = FALSE
			INIOPEN "log/log.ini"
				INIPUT "logging", "info", "0"
				INIPUT "logging", "warning", "0"
				INIPUT "logging", "critical", "0"
				INIPUT "logging", "error", "1"
			INIOPEN ""
			
			options.loglevel_info = 0
			options.loglevel_warning = 0
			options.loglevel_critical = 0
			options.loglevel_error = 1			
			
		ENDIF
	ENDIF

ENDFUNCTION

FUNCTION writeLog: info$, loglevel
LOCAL filesize, date$, ok

	date$ = MID$(PLATFORMINFO$("TIME"), 0, 10)
	DEBUG date$ + "\n"

	ok = DOESFILEEXIST("log" + date$ + ".txt")
	
	IF ok = FALSE
	
	ENDIF	
	IF ok = TRUE
		filesize = GETFILESIZE("log" + date$ + ".txt")
	ENDIF
	
	

ENDFUNCTION

FUNCTION checkOptions: id
LOCAL error
STATIC ok, found
STATIC resX, resY, full

	ok = DOESFILEEXIST("options.ini")

	// Initialisierung wird erzeugt
	IF found  = FALSE

		IF ok = TRUE
			resX = optionsFound(0)
			resY = optionsFound(1)
			full = optionsFound(2)

			IF resX = -1 OR resY = -1 OR full = -1
				KILLFILE "options.ini"
				optionsNotFound()
				resX = 1024
				resY = 768
				full = 0
			ENDIF


		ENDIF
		IF ok = FALSE
			optionsNotFound()
			resX = 1024
			resY = 768
			full = 0
		ENDIF

		found = TRUE
	ENDIF

	// Initialisierung durchgeführt
	IF id = 0 THEN RETURN resX
	IF id = 1 THEN RETURN resY
	IF id = 2 THEN RETURN full

ENDFUNCTION

FUNCTION optionsFound: id
LOCAL info$, info, error$

	INIOPEN "options.ini"
		IF id = 0 THEN info$ = INIGET$("options", "resX")
		IF id = 1 THEN info$ = INIGET$("options", "resY")
		IF id = 2 THEN info$ = INIGET$("options", "full")

		TRY
			info = info$
			IF MOD(info, 8) <> 0 THEN THROW "not8"
		CATCH error$
			IF error$ = "not8" THEN info$ = "-1"
		FINALLY

		RETURN info$
	INIOPEN ""

ENDFUNCTION

FUNCTION optionsNotFound:

	INIOPEN "options.ini"
		INIPUT "options", "resX", "1024"
		INIPUT "options", "resY", "768"
		INIPUT "options", "full", "0"
	INIOPEN ""

ENDFUNCTION